webpackHotUpdate("static/development/pages/index.js",{

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _babel_runtime_corejs2_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime-corejs2/helpers/esm/extends */ "./node_modules/@babel/runtime-corejs2/helpers/esm/extends.js");
/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-jsx/style */ "./node_modules/styled-jsx/style.js");
/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/link */ "./node_modules/next/link.js");
/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_3__);


var _jsxFileName = "/Users/jewelyhoxie/jhoxie.github.io/pages/index.js",
    _this = undefined;



var __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;

var favoriteCaseStudy = {
  studyHref: '/eligibility-quiz',
  title: __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 5,
      columnNumber: 10
    }
  }, "Tech Equity: Rent Control ", __jsx("br", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 5,
      columnNumber: 42
    }
  }), " Quiz & Calculator"),
  image: __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx("img", {
    src: "/TEEQ-buttonhero.png",
    className: "jsx-3940203479" + " " + "portfolio-piece-img eligibility-img",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 7,
      columnNumber: 5
    }
  }), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default.a, {
    id: "3940203479",
    __self: undefined
  }, ".eligibility-img.jsx-3940203479{width:100%;height:270px;object-fit:cover;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/jewelyhoxie/jhoxie.github.io/pages/index.js */"))
};
var otherCaseStudies = [{
  studyHref: '/discovery',
  title: __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 21,
      columnNumber: 12
    }
  }, " Ampled: Artist ", __jsx("br", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 21,
      columnNumber: 34
    }
  }), " Discovery Experience"),
  subtitle: 'Creating credibility and community through discovery',
  image: __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx("img", {
    src: "/discovery-1.png",
    className: "jsx-1577535014" + " " + "portfolio-piece-img discovery-img",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 24,
      columnNumber: 7
    }
  }), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default.a, {
    id: "1577535014",
    __self: undefined
  }, ".discovery-img.jsx-1577535014{width:300px;height:249.53px;margin-top:8px;margin-bottom:32px;}@media only screen and (max-width:767px){.discovery-img.jsx-1577535014{margin:0;width:286px;height:238px;}}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/jewelyhoxie/jhoxie.github.io/pages/index.js */"))
}, {
  studyHref: '/goodreads',
  title: __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 44,
      columnNumber: 13
    }
  }, "Goodreads: Information ", __jsx("br", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 44,
      columnNumber: 42
    }
  }), " Architecture Analysis"),
  subtitle: 'Optimizing user experience through an analysis of information architecture',
  image: __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx("img", {
    src: "/GR-buttonhero.png",
    className: "jsx-779502188" + " " + "portfolio-piece-img",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 48,
      columnNumber: 11
    }
  }), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default.a, {
    id: "779502188",
    __self: undefined
  }, ".portfolio-piece-img.jsx-779502188{width:100%;object-fit:cover;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/jewelyhoxie/jhoxie.github.io/pages/index.js */"))
}, {
  studyHref: '/healthscheduling',
  title: __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 61,
      columnNumber: 13
    }
  }, "Personal Project: Healthcare ", __jsx("br", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 61,
      columnNumber: 48
    }
  }), "Appointment Scheduling"),
  subtitle: 'Improve appointment scheduling at a specialized health clinic',
  image: __jsx(react__WEBPACK_IMPORTED_MODULE_2___default.a.Fragment, null, __jsx("img", {
    src: "/apptapp-header.png",
    className: "jsx-2436264567" + " " + "portfolio-piece-img apptapp-img",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 65,
      columnNumber: 9
    }
  }), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default.a, {
    id: "2436264567",
    __self: undefined
  }, ".apptapp-img.jsx-2436264567{width:342px;height:226px;margin-top:32px;margin-bottom:46px;}@media only screen and (max-width:767px){.apptapp-img.jsx-2436264567{margin:0;margin-bottom:16px;width:289px;height:190px;margin-top:12px;}}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/jewelyhoxie/jhoxie.github.io/pages/index.js */"))
}];
var notFullCaseStudy = {
  studyHref: '/artist-dashboard',
  title: __jsx("span", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 91,
      columnNumber: 13
    }
  }, "Ampled: ", __jsx("br", {
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 91,
      columnNumber: 27
    }
  }), "Artist Dashboard"),
  subtitle: 'Showcase: Artist dashboard',
  image: __jsx("div", {
    className: "jsx-705081987" + " " + "portfolio-piece-img-container",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 93,
      columnNumber: 13
    }
  }, __jsx("img", {
    src: "/ampled-people.png",
    className: "jsx-705081987" + " " + "portfolio-piece-img ampled-people-img",
    __self: undefined,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 94,
      columnNumber: 7
    }
  }), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default.a, {
    id: "705081987",
    __self: undefined
  }, ".ampled-people-img.jsx-705081987{width:379px;height:241px;margin-bottom:16px;}@media only screen and (max-width:767px){.ampled-people-img.jsx-705081987{margin:0;width:303px;height:192px;margin-top:12px;}}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/jewelyhoxie/jhoxie.github.io/pages/index.js */"))
};

var Home = function Home() {
  return __jsx("div", {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 114,
      columnNumber: 3
    }
  }, __jsx("div", {
    className: "intro",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 115,
      columnNumber: 5
    }
  }, __jsx("img", {
    className: "grid-image float-right-desktop hidden-mobile",
    width: "580",
    style: {
      marginTop: -30
    },
    src: "/Home-ProfilePic.png",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 116,
      columnNumber: 9
    }
  }), __jsx("div", {
    className: "heading main extra-top-padding",
    style: {
      maxWidth: 620
    },
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 117,
      columnNumber: 9
    }
  }, "Hi, I\u2019m Julie [she/her] - a product designer working at Tech Equity and living in Oakland, CA [open to relocation and/or remote work]."), __jsx("div", {
    className: "about-cta extra-top-padding",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 120,
      columnNumber: 9
    }
  }, __jsx(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
    href: "/about",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 121,
      columnNumber: 11
    }
  }, "Read more about me.")), __jsx("img", {
    className: "grid-image hidden-gt-mobile",
    width: "327",
    style: {
      margin: 'auto',
      marginBottom: 96,
      marginTop: 48
    },
    src: "/Home-ProfilePic.png",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 125,
      columnNumber: 9
    }
  })), __jsx("div", {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 127,
      columnNumber: 5
    }
  }, __jsx("div", {
    className: "heading main extra-top-padding center-text-desktop",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 128,
      columnNumber: 7
    }
  }, "My favorite case study:"), __jsx("div", {
    className: "flex full-width-mobile favorite extra-top-padding-sm extra-extra-bottom-padding",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 131,
      columnNumber: 7
    }
  }, __jsx(PortfolioPiece, Object(_babel_runtime_corejs2_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, favoriteCaseStudy, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 132,
      columnNumber: 9
    }
  }))), __jsx("div", {
    className: "heading main center-text-desktop",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 134,
      columnNumber: 7
    }
  }, "Other pretty great case studies:"), __jsx("div", {
    className: "jsx-3531551116" + " " + "portfolio-pieces grid half-and-half full-width-mobile extra-top-padding-sm extra-extra-bottom-padding",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 137,
      columnNumber: 7
    }
  }, otherCaseStudies.map(function (cs) {
    return __jsx(PortfolioPiece, Object(_babel_runtime_corejs2_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, cs, {
      __self: _this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 138,
        columnNumber: 37
      }
    }));
  }), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default.a, {
    id: "3531551116",
    __self: _this
  }, ".portfolio-pieces.jsx-3531551116{justify-items:stretch;grid-template-columns:50% 50%;grid-template-rows:50%;}@media only screen and (max-width:767px){.portfolio-pieces.jsx-3531551116{grid-template-columns:initial;grid-template-rows:initial;}}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/jewelyhoxie/jhoxie.github.io/pages/index.js */")), __jsx("div", {
    className: "heading main center-text-desktop",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 153,
      columnNumber: 7
    }
  }, "Just showing off - not full case studies:"), __jsx("div", {
    className: "flex full-width-mobile  extra-top-padding-sm extra-extra-bottom-padding favorite",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 156,
      columnNumber: 7
    }
  }, __jsx(PortfolioPiece, Object(_babel_runtime_corejs2_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, notFullCaseStudy, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 157,
      columnNumber: 9
    }
  })))));
};

var PortfolioPiece = function PortfolioPiece(_ref) {
  var studyHref = _ref.studyHref,
      title = _ref.title,
      subtitle = _ref.subtitle,
      image = _ref.image;
  return __jsx(next_link__WEBPACK_IMPORTED_MODULE_3___default.a, {
    href: studyHref,
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 164,
      columnNumber: 3
    }
  }, __jsx("div", {
    key: "title",
    className: "jsx-1673422758" + " " + "portfolio-piece grid-item",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 165,
      columnNumber: 5
    }
  }, __jsx("div", {
    className: "jsx-1673422758" + " " + "info",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 166,
      columnNumber: 7
    }
  }, __jsx("div", {
    className: "jsx-1673422758" + " " + "section-header",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 167,
      columnNumber: 9
    }
  }, title)), image, __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_1___default.a, {
    id: "1673422758",
    __self: _this
  }, ".favorite{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;}.favorite .portfolio-piece{-webkit-flex-basis:50%;-ms-flex-preferred-size:50%;flex-basis:50%;-webkit-box-flex:0;-webkit-flex-grow:0;-ms-flex-positive:0;flex-grow:0;}.portfolio-piece{background-color:#FAFAFA;-webkit-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border-radius:6px;margin:15px 0;margin-bottom:40px;margin-right:10px;cursor:pointer;box-shadow:#3E23EB 0 0 0 1px,#B4ABE8 10px 10px 0px;-webkit-transition:0.3s ease;transition:0.3s ease;overflow:hidden;}.portfolio-piece:hover{box-shadow:#3E23EB 0 0 0 1px,#B4ABE8 0px 0px 0px;-webkit-transition:0.3s ease;transition:0.3s ease;margin-right:-5px;margin-top:25px;margin-left:10px;margin-bottom:30px;}.portfolio-piece .section-header{font-size:34px;}.portfolio-piece .info{margin:32px 32px 0 32px;-webkit-flex:1 1 0;-ms-flex:1 1 0;flex:1 1 0;text-align:center;}.health-screening-img{width:335px;height:249px;marginTop:68px;marginRight:80px;}@media only screen and (max-width:767px){.health-screening-img{marginTop:0;marginRight:0;}.portfolio-piece .info{margin:16px 16px 0 16px;}.portfolio-piece{box-shadow:#3E23EB 0 0 0 1px;margin:8px;}.portfolio-piece:hover{box-shadow:#3E23EB 0 0 0 1px;margin:8px;}.portfolio-piece .section-header{font-size:24px;}.favorite .portfolio-piece{-webkit-flex-basis:100%;-ms-flex-preferred-size:100%;flex-basis:100%;}}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qZXdlbHlob3hpZS9qaG94aWUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlLeUIsQUFHc0IsQUFJRSxBQUlVLEFBZ0J5QixBQVFuQyxBQUdTLEFBS1osQUFPRSxBQUlZLEFBR0ssQUFJQSxBQUlkLEFBR0MsWUF4QkwsQUFPRyxHQWZsQixBQThCRSxTQTNCVyxBQWdCWCxDQTNDTyxBQWlDUSxDQU9mLEdBTWEsQUFJQSxXQWhCSSxBQWFqQixBQUlBLFNBbkNxQixRQW1CdkIsQ0FsQ2UsUUFMRCxHQWdDTSxBQTZCbEIsS0FqRXVCLGFBcUN6QixZQVpvQixrQkFDRixlQWhCTSxDQWlCTCxJQXRCbkIsYUF1QnFCLG1CQUNyQixJQTVCQSxxQ0FVcUIsNkZBQ0ksbUdBQ0wsa0JBQ0osY0FDSyxtQkFDRCxrQkFDSCxlQUNxQyxtREFDL0Isa0RBQ0wsZ0JBQ2xCIiwiZmlsZSI6Ii9Vc2Vycy9qZXdlbHlob3hpZS9qaG94aWUuZ2l0aHViLmlvL3BhZ2VzL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExpbmsgZnJvbSAnbmV4dC9saW5rJ1xuXG5jb25zdCBmYXZvcml0ZUNhc2VTdHVkeSA9IHtcbiAgc3R1ZHlIcmVmOiAnL2VsaWdpYmlsaXR5LXF1aXonLFxuICB0aXRsZTogPHNwYW4+VGVjaCBFcXVpdHk6IFJlbnQgQ29udHJvbCA8YnIvPiBRdWl6ICZhbXA7IENhbGN1bGF0b3I8L3NwYW4+LFxuICBpbWFnZTogKDw+XG4gICAgPGltZyBjbGFzc05hbWU9XCJwb3J0Zm9saW8tcGllY2UtaW1nIGVsaWdpYmlsaXR5LWltZ1wiIHNyYz1cIi9URUVRLWJ1dHRvbmhlcm8ucG5nXCIvPlxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgLmVsaWdpYmlsaXR5LWltZyB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDI3MHB4O1xuICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgIH1cbiAgICBgfTwvc3R5bGU+XG4gIDwvPiksXG59O1xuXG5jb25zdCBvdGhlckNhc2VTdHVkaWVzID0gW1xuICB7XG4gICAgc3R1ZHlIcmVmOiAnL2Rpc2NvdmVyeScsXG4gICAgdGl0bGU6IDxzcGFuPiBBbXBsZWQ6IEFydGlzdCA8YnIvPiBEaXNjb3ZlcnkgRXhwZXJpZW5jZTwvc3Bhbj4sXG4gICAgc3VidGl0bGU6ICdDcmVhdGluZyBjcmVkaWJpbGl0eSBhbmQgY29tbXVuaXR5IHRocm91Z2ggZGlzY292ZXJ5JyxcbiAgICBpbWFnZTogKDw+XG4gICAgICA8aW1nIGNsYXNzTmFtZT1cInBvcnRmb2xpby1waWVjZS1pbWcgZGlzY292ZXJ5LWltZ1wiIHNyYz1cIi9kaXNjb3ZlcnktMS5wbmdcIi8+XG4gICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLmRpc2NvdmVyeS1pbWcge1xuICAgICAgICAgIHdpZHRoOiAzMDBweDtcbiAgICAgICAgICBoZWlnaHQ6IDI0OS41M3B4O1xuICAgICAgICAgIG1hcmdpbi10b3A6IDhweDtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAzMnB4O1xuICAgICAgICB9XG4gICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcbiAgICAgICAgICAuZGlzY292ZXJ5LWltZyB7XG4gICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICB3aWR0aDogMjg2cHg7XG4gICAgICAgICAgICBoZWlnaHQ6IDIzOHB4O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvPiksXG4gIH0sXG4gIHtcbiAgICBzdHVkeUhyZWY6ICcvZ29vZHJlYWRzJyxcbiAgICB0aXRsZTogKDxzcGFuPkdvb2RyZWFkczogSW5mb3JtYXRpb24gPGJyLz4gQXJjaGl0ZWN0dXJlIEFuYWx5c2lzPC9zcGFuPiksXG4gICAgc3VidGl0bGU6ICdPcHRpbWl6aW5nIHVzZXIgZXhwZXJpZW5jZSB0aHJvdWdoIGFuIGFuYWx5c2lzIG9mIGluZm9ybWF0aW9uIGFyY2hpdGVjdHVyZScsXG4gICAgaW1hZ2U6IChcbiAgICAgIDw+XG4gICAgICAgICAgPGltZyBjbGFzc05hbWU9XCJwb3J0Zm9saW8tcGllY2UtaW1nXCIgc3JjPVwiL0dSLWJ1dHRvbmhlcm8ucG5nXCIgLz5cbiAgICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgICAucG9ydGZvbGlvLXBpZWNlLWltZyB7XG4gICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICAgICAgICAgICAgLy8gaGVpZ2h0OiAyMDkuMTRweDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgYH08L3N0eWxlPlxuICAgICAgPC8+XG4gICAgKSxcbiAgfSxcbiAge1xuICAgIHN0dWR5SHJlZjogJy9oZWFsdGhzY2hlZHVsaW5nJyxcbiAgICB0aXRsZTogKDxzcGFuPlBlcnNvbmFsIFByb2plY3Q6IEhlYWx0aGNhcmUgPGJyLz5BcHBvaW50bWVudCBTY2hlZHVsaW5nPC9zcGFuPiksXG4gICAgc3VidGl0bGU6ICdJbXByb3ZlIGFwcG9pbnRtZW50IHNjaGVkdWxpbmcgYXQgYSBzcGVjaWFsaXplZCBoZWFsdGggY2xpbmljJyxcbiAgICBpbWFnZTogKFxuICAgICAgPD5cbiAgICAgICAgPGltZyBjbGFzc05hbWU9XCJwb3J0Zm9saW8tcGllY2UtaW1nIGFwcHRhcHAtaW1nXCIgc3JjPVwiL2FwcHRhcHAtaGVhZGVyLnBuZ1wiIC8+XG4gICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgICAuYXBwdGFwcC1pbWcge1xuICAgICAgICAgICAgICAgIHdpZHRoOiAzNDJweDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDIyNnB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi10b3A6IDMycHg7XG4gICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNDZweDtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgICAgICAgICAgICAgLmFwcHRhcHAtaW1nIHtcbiAgICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gICAgICAgICAgICAgICAgICB3aWR0aDogMjg5cHg7XG4gICAgICAgICAgICAgICAgICBoZWlnaHQ6IDE5MHB4O1xuICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMTJweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICBgfTwvc3R5bGU+XG4gICAgICA8Lz5cbiAgICApLFxuICB9XG5dO1xuXG5cbmNvbnN0IG5vdEZ1bGxDYXNlU3R1ZHkgPSB7XG4gICAgc3R1ZHlIcmVmOiAnL2FydGlzdC1kYXNoYm9hcmQnLFxuICAgIHRpdGxlOiAoPHNwYW4+QW1wbGVkOiA8YnIvPkFydGlzdCBEYXNoYm9hcmQ8L3NwYW4+KSxcbiAgICBzdWJ0aXRsZTogJ1Nob3djYXNlOiBBcnRpc3QgZGFzaGJvYXJkJyxcbiAgICBpbWFnZTogKDxkaXYgY2xhc3NOYW1lPVwicG9ydGZvbGlvLXBpZWNlLWltZy1jb250YWluZXJcIj5cbiAgICAgIDxpbWcgY2xhc3NOYW1lPVwicG9ydGZvbGlvLXBpZWNlLWltZyBhbXBsZWQtcGVvcGxlLWltZ1wiIHNyYz1cIi9hbXBsZWQtcGVvcGxlLnBuZ1wiIC8+XG4gICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgICAuYW1wbGVkLXBlb3BsZS1pbWcge1xuICAgICAgICAgICAgICAgIHdpZHRoOiAzNzlweDtcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDI0MXB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDE2cHg7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgICAgICAgICAgICAgIC5hbXBsZWQtcGVvcGxlLWltZyB7XG4gICAgICAgICAgICAgICAgICBtYXJnaW46IDA7XG4gICAgICAgICAgICAgICAgICB3aWR0aDogMzAzcHg7XG4gICAgICAgICAgICAgICAgICBoZWlnaHQ6IDE5MnB4O1xuICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogMTJweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICBgfTwvc3R5bGU+XG4gICAgPC9kaXY+KSxcbiAgfTtcblxuY29uc3QgSG9tZSA9ICgpID0+IChcbiAgPGRpdj5cbiAgICA8ZGl2IGNsYXNzTmFtZT1cImludHJvXCI+XG4gICAgICAgIDxpbWcgY2xhc3NOYW1lPVwiZ3JpZC1pbWFnZSBmbG9hdC1yaWdodC1kZXNrdG9wIGhpZGRlbi1tb2JpbGVcIiB3aWR0aD1cIjU4MFwiIHN0eWxlPXt7IG1hcmdpblRvcDogLTMwIH19IHNyYz1cIi9Ib21lLVByb2ZpbGVQaWMucG5nXCIvPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImhlYWRpbmcgbWFpbiBleHRyYS10b3AtcGFkZGluZ1wiIHN0eWxlPXt7bWF4V2lkdGg6IDYyMCB9fT5cbiAgICAgICAgICAgIEhpLCBJ4oCZbSBKdWxpZSBbc2hlL2hlcl0gLSBhIHByb2R1Y3QgZGVzaWduZXIgd29ya2luZyBhdCBUZWNoIEVxdWl0eSBhbmQgbGl2aW5nIGluIE9ha2xhbmQsIENBIFtvcGVuIHRvIHJlbG9jYXRpb24gYW5kL29yIHJlbW90ZSB3b3JrXS5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYWJvdXQtY3RhIGV4dHJhLXRvcC1wYWRkaW5nXCI+XG4gICAgICAgICAgPExpbmsgaHJlZj1cIi9hYm91dFwiPlxuICAgICAgICAgICAgUmVhZCBtb3JlIGFib3V0IG1lLlxuICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxpbWcgY2xhc3NOYW1lPVwiZ3JpZC1pbWFnZSBoaWRkZW4tZ3QtbW9iaWxlXCIgd2lkdGg9XCIzMjdcIiBzdHlsZT17eyBtYXJnaW46ICdhdXRvJywgbWFyZ2luQm90dG9tOiA5NiwgbWFyZ2luVG9wOiA0OCB9fSBzcmM9XCIvSG9tZS1Qcm9maWxlUGljLnBuZ1wiLz5cbiAgICA8L2Rpdj5cbiAgICA8ZGl2PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJoZWFkaW5nIG1haW4gZXh0cmEtdG9wLXBhZGRpbmcgY2VudGVyLXRleHQtZGVza3RvcFwiPlxuICAgICAgICBNeSBmYXZvcml0ZSBjYXNlIHN0dWR5OlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZnVsbC13aWR0aC1tb2JpbGUgZmF2b3JpdGUgZXh0cmEtdG9wLXBhZGRpbmctc20gZXh0cmEtZXh0cmEtYm90dG9tLXBhZGRpbmdcIj5cbiAgICAgICAgPFBvcnRmb2xpb1BpZWNlIHsuLi5mYXZvcml0ZUNhc2VTdHVkeX0vPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImhlYWRpbmcgbWFpbiBjZW50ZXItdGV4dC1kZXNrdG9wXCI+XG4gICAgICAgIE90aGVyIHByZXR0eSBncmVhdCBjYXNlIHN0dWRpZXM6XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwicG9ydGZvbGlvLXBpZWNlcyBncmlkIGhhbGYtYW5kLWhhbGYgZnVsbC13aWR0aC1tb2JpbGUgZXh0cmEtdG9wLXBhZGRpbmctc20gZXh0cmEtZXh0cmEtYm90dG9tLXBhZGRpbmdcIj5cbiAgICAgICAge290aGVyQ2FzZVN0dWRpZXMubWFwKGNzID0+IDxQb3J0Zm9saW9QaWVjZSB7Li4uY3N9Lz4pfVxuICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgLnBvcnRmb2xpby1waWVjZXMge1xuICAgICAgICAgICAganVzdGlmeS1pdGVtczogc3RyZXRjaDtcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNTAlIDUwJTtcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogNTAlO1xuICAgICAgICAgIH1cbiAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2N3B4KSB7XG4gICAgICAgICAgICAucG9ydGZvbGlvLXBpZWNlcyB7XG4gICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogaW5pdGlhbDtcbiAgICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBpbml0aWFsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJoZWFkaW5nIG1haW4gY2VudGVyLXRleHQtZGVza3RvcFwiPlxuICAgICAgICBKdXN0IHNob3dpbmcgb2ZmIC0gbm90IGZ1bGwgY2FzZSBzdHVkaWVzOlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZnVsbC13aWR0aC1tb2JpbGUgIGV4dHJhLXRvcC1wYWRkaW5nLXNtIGV4dHJhLWV4dHJhLWJvdHRvbS1wYWRkaW5nIGZhdm9yaXRlXCI+XG4gICAgICAgIDxQb3J0Zm9saW9QaWVjZSB7Li4ubm90RnVsbENhc2VTdHVkeX0vPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuKTtcblxuY29uc3QgUG9ydGZvbGlvUGllY2UgPSAoeyBzdHVkeUhyZWYsIHRpdGxlLCBzdWJ0aXRsZSwgaW1hZ2UgfSkgPT4gKFxuICA8TGluayBocmVmPXtzdHVkeUhyZWZ9PlxuICAgIDxkaXYgY2xhc3NOYW1lPVwicG9ydGZvbGlvLXBpZWNlIGdyaWQtaXRlbVwiIGtleT1cInRpdGxlXCI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cImluZm9cIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzZWN0aW9uLWhlYWRlclwiPnt0aXRsZX08L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAge2ltYWdlfVxuICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+e2BcbiAgICAgIC5mYXZvcml0ZSB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgfVxuICAgICAgLmZhdm9yaXRlIC5wb3J0Zm9saW8tcGllY2Uge1xuICAgICAgICBmbGV4LWJhc2lzOiA1MCU7XG4gICAgICAgIGZsZXgtZ3JvdzogMDtcbiAgICAgIH1cbiAgICAgIC5wb3J0Zm9saW8tcGllY2Uge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkFGQUZBO1xuICAgICAgICBmbGV4OiAxO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgICAgICBtYXJnaW46IDE1cHggMDtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogNDBweDtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgIGJveC1zaGFkb3c6ICMzRTIzRUIgMCAwIDAgMXB4LCAjQjRBQkU4IDEwcHggMTBweCAwcHg7XG4gICAgICAgIHRyYW5zaXRpb246IDAuM3MgZWFzZTtcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgIH1cbiAgICAgIC5wb3J0Zm9saW8tcGllY2U6aG92ZXIge1xuICAgICAgICBib3gtc2hhZG93OiAjM0UyM0VCIDAgMCAwIDFweCwgI0I0QUJFOCAwcHggMHB4IDBweDtcbiAgICAgICAgdHJhbnNpdGlvbjogMC4zcyBlYXNlO1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IC01cHg7XG4gICAgICAgIG1hcmdpbi10b3A6IDI1cHg7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICAgICAgfVxuICAgICAgLnBvcnRmb2xpby1waWVjZSAuc2VjdGlvbi1oZWFkZXIge1xuICAgICAgICBmb250LXNpemU6IDM0cHg7XG4gICAgICB9XG4gICAgICAucG9ydGZvbGlvLXBpZWNlIC5pbmZvIHtcbiAgICAgICAgbWFyZ2luOiAzMnB4IDMycHggMCAzMnB4O1xuICAgICAgICBmbGV4OiAxIDEgMDtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgfVxuICAgICAgLmhlYWx0aC1zY3JlZW5pbmctaW1nIHtcbiAgICAgICAgd2lkdGg6IDMzNXB4O1xuICAgICAgICBoZWlnaHQ6IDI0OXB4O1xuICAgICAgICBtYXJnaW5Ub3A6IDY4cHg7XG4gICAgICAgIG1hcmdpblJpZ2h0OiA4MHB4O1xuICAgICAgfVxuICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xuICAgICAgICAuaGVhbHRoLXNjcmVlbmluZy1pbWcge1xuICAgICAgICAgIG1hcmdpblRvcDogMDtcbiAgICAgICAgICBtYXJnaW5SaWdodDogMDtcbiAgICAgICAgfVxuICAgICAgICAucG9ydGZvbGlvLXBpZWNlIC5pbmZvIHtcbiAgICAgICAgICBtYXJnaW46IDE2cHggMTZweCAwIDE2cHg7XG4gICAgICAgIH1cbiAgICAgICAgLnBvcnRmb2xpby1waWVjZSB7XG4gICAgICAgICAgYm94LXNoYWRvdzogIzNFMjNFQiAwIDAgMCAxcHg7XG4gICAgICAgICAgbWFyZ2luOiA4cHg7XG4gICAgICAgIH1cbiAgICAgICAgLnBvcnRmb2xpby1waWVjZTpob3ZlciB7XG4gICAgICAgICAgYm94LXNoYWRvdzogIzNFMjNFQiAwIDAgMCAxcHg7XG4gICAgICAgICAgbWFyZ2luOiA4cHg7XG4gICAgICAgIH1cbiAgICAgICAgLnBvcnRmb2xpby1waWVjZSAuc2VjdGlvbi1oZWFkZXIge1xuICAgICAgICAgIGZvbnQtc2l6ZTogMjRweDtcbiAgICAgICAgfVxuICAgICAgICAuZmF2b3JpdGUgLnBvcnRmb2xpby1waWVjZSB7XG4gICAgICAgICAgZmxleC1iYXNpczogMTAwJTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIGB9PC9zdHlsZT5cbiAgICA8L2Rpdj5cbiAgPC9MaW5rPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgSG9tZTtcbiJdfQ== */\n/*@ sourceURL=/Users/jewelyhoxie/jhoxie.github.io/pages/index.js */")));
};

/* harmony default export */ __webpack_exports__["default"] = (Home);

/***/ })

})
//# sourceMappingURL=index.js.bb1952f1090f91c5f6b1.hot-update.js.map